name: CI Build for ministo on CentOS 7

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: centos:7
    steps:
      # Verify CentOS 7 environment
      - name: Verify CentOS 7
        run: |
          cat /etc/*release | grep ^ID
          cat /etc/*release | grep ^VERSION_ID

      # Install dependencies
      - name: Install build dependencies
        run: |
          yum update -y
          yum install -y gcc gcc-c++ make git curl file gdb libstdc++-devel

      # Install Rust and Cargo
      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          rustc --version
          cargo --version

      # Checkout code using Node 16 compatible version
      - name: Checkout code
        uses: actions/checkout@v3  # Use v3 to avoid Node 20 dependency

      # Build the project with optimizations
      - name: Build with Cargo (optimized)
        run: |
          source $HOME/.cargo/env
          cargo clean
          cargo build --release --verbose

      # Verify binary dependencies
      - name: Check binary dependencies
        run: |
          ldd ./target/release/ministo

      # Run the binary with debug logging
      - name: Run binary with debug logging (optimized)
        run: |
          export RUST_LOG=debug
          ./target/release/ministo || echo "Binary crashed, check logs"
        continue-on-error: true

      # Upload optimized binary
      - name: Upload optimized binary
        uses: actions/upload-artifact@v3
        with:
          name: ministo-binary-optimized
          path: ./target/release/ministo

      # Build without optimizations for debugging
      - name: Build with Cargo (no optimizations)
        run: |
          source $HOME/.cargo/env
          cargo clean
          # Override optimizations
          echo "[profile.release]" >> Cargo.toml
          echo "lto = false" >> Cargo.toml
          echo "codegen-units = 16" >> Cargo.toml
          cargo build --release --verbose

      # Run the binary without optimizations
      - name: Run binary with debug logging (no optimizations)
        run: |
          export RUST_LOG=debug
          ./target/release/ministo || echo "Binary crashed, check logs"
        continue-on-error: true

      # Upload non-optimized binary
      - name: Upload non-optimized binary
        uses: actions/upload-artifact@v3
        with:
          name: ministo-binary-no-optimizations
          path: ./target/release/ministo

      # Debug with GDB if either run fails
      - name: Debug with GDB
        if: failure()
        run: |
          gdb --batch --ex run --ex bt ./target/release/ministo
