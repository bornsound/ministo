name: Build Ministo (Ubuntu 14.04 in Docker)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo (not actually used since we clone inside Docker, but keeps GHA clean)
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Build Docker image with Ubuntu 14.04 + CMake 3.25.3 + Rust
      - name: Build Docker image
        run: |
          cat > Dockerfile <<'EOF'
          FROM ubuntu:14.04

          # Install build tools and OpenSSL dev
          RUN apt-get update && apt-get install -y \
              git curl build-essential wget \
              libssl-dev \
           && rm -rf /var/lib/apt/lists/*

          # Build and install modern CMake
          RUN wget https://cmake.org/files/v3.25/cmake-3.25.3.tar.gz \
           && tar -xzf cmake-3.25.3.tar.gz \
           && cd cmake-3.25.3 \
           && ./bootstrap --prefix=/usr/local \
           && make -j8 \
           && make install \
           && cd .. && rm -rf cmake-3.25.3*

          # Install Rust
          RUN curl https://sh.rustup.rs -sSf | sh -s -- -y
          ENV PATH="/root/.cargo/bin:${PATH}"

          # Clone and build ministo
          WORKDIR /usr/src/ministo
          RUN git clone https://github.com/bornsound/ministo.git . \
           && cargo build --release --jobs 8
          EOF

          docker build -t ministo-ubuntu14 .

      # 3. Extract built binary from Docker
      - name: Copy binary from Docker image
        run: |
          container_id=$(docker create ministo-ubuntu14)
          docker cp $container_id:/usr/src/ministo/target/release/ministo ./ministo
          docker rm $container_id

      # 4. Upload as an artifact
      - name: Upload ministo binary
        uses: actions/upload-artifact@v4
        with:
          name: ministo-linux
          path: ./ministo
